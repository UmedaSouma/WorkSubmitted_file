//===========================================================================================================================================================
// 
// 戦闘画面のユーザーインターフェース [ButtleUI.cpp]
// Author : souma umeda
// 
//===========================================================================================================================================================
#include "ButtleUI.h"
#include "texture.h"
#include "manager.h"

//========================================================================================================================
// コンストラクタ
//========================================================================================================================
CButtleUI::CButtleUI(int nPriority) :CObject2D(nPriority)
, m_bIsPush(false)
, m_bIsCoolTime(false)
{
}

//========================================================================================================================
// デストラクタ
//========================================================================================================================
CButtleUI::~CButtleUI()
{
}

//========================================================================================================================
// 初期設定
//========================================================================================================================
HRESULT CButtleUI::Init()
{
	CObject2D::Init();

	return S_OK;
}

//========================================================================================================================
// 終了処理
//========================================================================================================================
void CButtleUI::Uninit()
{
	CObject2D::Uninit();
}

//========================================================================================================================
// 更新処理
//========================================================================================================================
void CButtleUI::Update()
{
	SetColor({ 1.0f,1.0f,1.0f,1.0f });	// デフォルトのカラー設定

	if (m_bIsPush)
	{
		SetColor({ 0.8f,0.8f,0.8f,1.0f });
	}

	CObject2D::Update();

	m_bIsPush = false;
}

//========================================================================================================================
// 描画処理
//========================================================================================================================
void CButtleUI::Draw()
{
	CObject2D::Draw();
}

//========================================================================================================================
// 生成処理
//========================================================================================================================
CButtleUI* CButtleUI::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CButtleUI* pButtleUI = new CButtleUI;

	pButtleUI->SetPos(pos);
	pButtleUI->SetSize(size);

	pButtleUI->Init();

	return pButtleUI;
}

//===========================================================================================================
// どの使役敵のテクスチャを設定するか
//===========================================================================================================
void CButtleUI::SetTex_SelectMessenger(CEnemy3D::TAG_ENEMY tag)
{
	int nIdx = 0;
	CTexture* pTexData = CManager::GetTexture();

	// ここで下のアイコンの設定をしている
	switch (tag)
	{
	case CEnemy3D::TAG_NONE:
		nIdx = pTexData->Regist("data\\TEXTURE\\select_messenger_none_000.png");
		break;

	case CEnemy3D::TAG_SLIME:
		nIdx = pTexData->Regist("data\\TEXTURE\\select_messenger_slime_000.png");
		break;

	case CEnemy3D::TAG_GOLEM:
		nIdx = pTexData->Regist("data\\TEXTURE\\select_messenger_golem_000.png");
		break;

	default:
		assert(1);
		break;
	}

	BindTexture(pTexData->GetAddress(nIdx));
}

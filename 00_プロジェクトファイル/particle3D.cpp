#include "particle3D.h"
#include "manager.h"

//========================================================================================================================
// コンストラクタ
//========================================================================================================================
CParticle3D::CParticle3D() :
	m_nLife(0)
	, m_nNum(0)
	, m_move{ 0.0f,0.0f,0.0f }
{
}

//========================================================================================================================
// デストラクタ
//========================================================================================================================
CParticle3D::~CParticle3D()
{
}

//========================================================================================================================
// 初期設定
//========================================================================================================================
HRESULT CParticle3D::Init()
{
	float randangle = rand() % 628 - 314 * 0.01f;
	float randspeed = rand() % 5 * 0.5f;

	m_move = {
		sinf(randangle) * randspeed,
		cosf(randangle) * randspeed,
		0.0f
	};

	SetModelAddress("data\\model\\item_fragmentlife_001.x");	// アドレスを保存しておく
	CModeldata* pModeldata = CManager::GetModeldata();			// modeldata のポインタを持ってくる
	int nIdx = pModeldata->Regist(GetModelAddress());			// モデルデータの登録
	BindModel(pModeldata->GetAddress(nIdx));					// モデル情報をセットする

	CModel::Init();

	return S_OK;
}

//========================================================================================================================
// 終了処理
//========================================================================================================================
void CParticle3D::Uninit()
{
	CModel::Uninit();
}

//========================================================================================================================
// 更新処理
//========================================================================================================================
void CParticle3D::Update()
{
	CModel::Update();

	D3DXVECTOR3 pos = GetPos();
	pos += m_move;
	SetPos(pos);

	if (m_nLife <= 0)
	{
		Uninit();
	}

	m_nLife--;
}

//========================================================================================================================
// 描画処理
//========================================================================================================================
void CParticle3D::Draw()
{
	CModel::Draw();
}

//========================================================================================================================
// 生成処理
//========================================================================================================================
CParticle3D* CParticle3D::Create(D3DXVECTOR3 pos, int life)
{
	CParticle3D* pParticle = new CParticle3D;

	pParticle->SetPos(pos);
	pParticle->SetType(TYPE::PARTICLE);
	pParticle->m_nLife = life;

	pParticle->Init();

	return pParticle;
}